{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/SearchMarkup/SearchMarkup.jsx","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","SearchMarkup","state","query","handleChange","event","setState","target","value","this","props","filteredFilms","filter","film","toLowerCase","includes","htmlFor","type","id","placeholder","onChange","React","Component","App","moviesFromServer","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"6wEAIaA,G,YAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,ICpBH,IAAMK,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAFX,EAKEC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZH,MAAOE,EAAME,OAAOC,SAP1B,4CAWE,WACE,IAAQZ,EAAWa,KAAKC,MAAhBd,OACAO,EAAUM,KAAKP,MAAfC,MACFQ,EAAgBf,EAAOgB,QAC3B,SAAAC,GAAI,OAAKA,EAAK3B,MAAM4B,cAAeC,SAASZ,IACtCU,EAAK1B,YAAY2B,cAAeC,SAASZ,MAGjD,OACE,oCACE,yBAAKb,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAO0B,QAAQ,eAAe1B,UAAU,SAAxC,gBAIA,yBAAKA,UAAU,WACb,2BACE2B,KAAK,OACLC,GAAG,eACH5B,UAAU,QACV6B,YAAY,mBACZX,MAAOC,KAAKP,MAAMC,MAClBiB,SAAUX,KAAKL,kBAOvB,kBAAC,EAAD,CAAYR,OAAQe,SAzC5B,GAAkCU,IAAMC,WAwDxCrB,EAAaP,aAAe,CAC1BE,OAAQ,IC1DH,IAAM2B,EAAb,4JACE,WACE,OACE,yBAAKjC,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAcM,OAAQ4B,KAExB,yBAAKlC,UAAU,WAAf,0BAPR,GAAyBmC,iBCAzBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6de95552.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","// /* eslint-disable */\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nimport { MoviesList } from '../MoviesList';\n\nexport class SearchMarkup extends React.Component {\n  state = {\n    query: '',\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      query: event.target.value,\n    });\n  }\n\n  render() {\n    const { movies } = this.props;\n    const { query } = this.state;\n    const filteredFilms = movies.filter(\n      film => (film.title.toLowerCase()).includes(query)\n        || (film.description.toLowerCase()).includes(query),\n    );\n\n    return (\n      <>\n        <div className=\"box\">\n          <div className=\"field\">\n            <label htmlFor=\"search-query\" className=\"label\">\n              Search movie\n            </label>\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"search-query\"\n                className=\"input\"\n                placeholder=\"Type search word\"\n                value={this.state.query}\n                onChange={this.handleChange}\n\n              />\n            </div>\n          </div>\n        </div>\n\n        <MoviesList movies={filteredFilms} />\n      </>\n    );\n  }\n}\n\nSearchMarkup.propTypes = {\n  movies: propTypes.arrayOf(\n    propTypes.shape({\n      title: propTypes.string.isRequired,\n      description: propTypes.string.isRequired,\n    }),\n  ),\n};\n\nSearchMarkup.defaultProps = {\n  movies: [],\n};\n","import React, { PureComponent } from 'react';\nimport './App.scss';\nimport moviesFromServer from './api/movies.json';\nimport { SearchMarkup } from './components/SearchMarkup';\n\nexport class App extends PureComponent {\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <SearchMarkup movies={moviesFromServer} />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}